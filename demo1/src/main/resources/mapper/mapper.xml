<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.emp.mapper.EmpMapper">
		<sql id="condition">
		<where>
		<if test="vo.departmentId != null">
				DEPARTMENT_ID = #{vo.departmentId}
			</if>
			<if test="vo.firstName != null">
				AND FIRST_NAME = #{vo.firstName}
			</if>
			<if test="vo.managerId != null">
				AND MANAGER_ID = #{vo.managerId}
			</if>
			<if test="svo.employeeIds != null">
				AND employee_id
			<foreach collection="svo.employeeIds"
					item="empid"
			 		open="in (" 
					close=")" 
					separator="," >
					#{empid}
			</foreach>
				
			</if>
			</where>
			</sql>
			<resultMap type="EmpVO" id="empResultMap">
				<id property="employeeId" column="EMPLOYEE_ID"></id>
				<result  property="firstName" column="FIRST_NAME"></result>
				<result  property="phone" column="PHONE_NUMBER"></result>
			</resultMap>
	<select id="getEmpList" resultMap="empResultMap">
	SELECT * FROM ( SELECT rownum rn, a.* FROM (
	
		SELECT rownum id, 
					EMPLOYEE_ID,
					FIRST_NAME,
					LAST_NAME,
					EMAIL,
					PHONE_NUMBER "phone",
					HIRE_DATE,
					JOB_ID,
					SALARY,
					COMMISSION_PCT,
					MANAGER_ID,
					DEPARTMENT_ID
		FROM employees e
		<include refid="condition"></include>
		ORDER BY first_name		
	
	) a WHERE rownum <![CDATA[<=]]> #{svo.end} ) b WHERE rn >= #{svo.start}
	
	</select>
	<select id="getEmpInfo" parameterType="int" resultType="EmpVO">
		SELECT *
		FROM employees
		WHERE employee_id = #{employeeId}
	</select>
	<insert id="insertEmp" parameterType="EmpVO">
	<selectKey keyProperty="employeeId"
				order="BEFORE"
				resultType="int">
	select employees_seq.nextval from dual
	</selectKey>
	 insert into employees
	 (EMPLOYEE_ID,
	FIRST_NAME,
	LAST_NAME,
	EMAIL,
	HIRE_DATE,
	JOB_ID,
	<if test="salary!=null">SALARY,</if>
	MANAGER_ID,
	DEPARTMENT_ID)
values(
#{employeeId},
#{firstName},
#{lastName},
#{email},
#{hireDate},
#{jobId},
<if test="salary!=null">#{salary},</if>
#{managerId},
#{departmentId}
)
	</insert>
<delete id="deleteEmp" parameterType="int">
    DELETE FROM employees
    WHERE EMPLOYEE_ID = #{employeeId}
</delete>
<select id="getStat" resultType="map">
SELECT 	E.DEPARTMENT_ID "id",
 		D.DEPARTMENT_NAME "name", 
 		COUNT(*) AS "cnt" 
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID IS NOT NULL
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
</select>
</mapper>